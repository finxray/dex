üìã QUICK COPY-PASTE VALUES FOR REMIX TESTING
==================================================

üèóÔ∏è CONSTRUCTOR PARAMETERS
------------------------
PoolManager Constructor:
_defaultAlpha: 0x1111111111111111111111111111111111111111
_defaultBeta: 0x2222222222222222222222222222222222222222

üéØ COMMON ADDRESSES
------------------
ETH Address: 0x0000000000000000000000000000000000000000
Test Quoter: 0x1111111111111111111111111111111111111111
Max Approve: 115792089237316195423570985008687907853269984665640564039457584007913129639935

üèä POOL CREATION VALUES
----------------------
ETH/TokenA Pool:
asset0: 0x0000000000000000000000000000000000000000
asset1: [YOUR_TOKENA_ADDRESS]
quoter: 0x1111111111111111111111111111111111111111
markings: 0x123456

TokenA/TokenB Pool:
asset0: [LOWER_TOKEN_ADDRESS]
asset1: [HIGHER_TOKEN_ADDRESS]
quoter: 0x1111111111111111111111111111111111111111
markings: 0xabcdef

üíß LIQUIDITY AMOUNTS
-------------------
Mint Tokens: 10000000000000000000000 (10,000 tokens)
Add ETH: 1000000000000000000 (1 ETH)
Add TokenA: 1000000000000000000000 (1,000 tokens)
Add TokenB: 500000000000000000000 (500 tokens)

üîÑ SWAP AMOUNTS
--------------
Swap 0.1 ETH: 100000000000000000
Swap 100 TokenA: 100000000000000000000
Swap 130 TokenA: 130000000000000000000
Min Output: 50000000000000000

üìù FUNCTION CALL TEMPLATES
-------------------------

üî∏ Mint Tokens:
Function: mint
to: [YOUR_ADDRESS]
amount: 10000000000000000000000

üî∏ Approve Tokens:
Function: approve
spender: [POOLMANAGER_ADDRESS]
amount: 115792089237316195423570985008687907853269984665640564039457584007913129639935

üî∏ Create Pool:
Function: createPool
asset0: [ASSET0_ADDRESS]
asset1: [ASSET1_ADDRESS]
quoter: 0x1111111111111111111111111111111111111111
markings: 0x123456

üî∏ Add Liquidity (ETH Pool):
Function: addLiquidity
ETH Value: 1000000000000000000
poolID: [POOL_ID]
asset0: 0x0000000000000000000000000000000000000000
asset1: [TOKENA_ADDRESS]
amount0: 1000000000000000000
amount1: 1000000000000000000000

üî∏ Add Liquidity (ERC20 Pool):
Function: addLiquidity
ETH Value: 0
poolID: [POOL_ID]
asset0: [ASSET0_ADDRESS]
asset1: [ASSET1_ADDRESS]
amount0: 1000000000000000000000
amount1: 500000000000000000000

üî∏ Swap ETH‚ÜíToken:
Function: swap
ETH Value: 100000000000000000
poolID: [POOL_ID]
asset0: 0x0000000000000000000000000000000000000000
asset1: [TOKEN_ADDRESS]
amountIn: 100000000000000000
zeroForOne: true
minAmountOut: 100000000000000000000

üî∏ Swap Token‚ÜíETH:
Function: swap
ETH Value: 0
poolID: [POOL_ID]
asset0: 0x0000000000000000000000000000000000000000
asset1: [TOKEN_ADDRESS]
amountIn: 130000000000000000000
zeroForOne: false
minAmountOut: 50000000000000000

üî∏ Check Inventory:
Function: inventory
poolID: [POOL_ID]

üî∏ Check LP Balance:
Function: balanceOf
owner: [YOUR_ADDRESS]
id: [POOL_ID]

üî∏ Remove Liquidity:
Function: removeLiquidity
poolID: [POOL_ID]
asset0: [ASSET0_ADDRESS]
asset1: [ASSET1_ADDRESS]
liquidity: [HALF_OF_LP_BALANCE]

‚ö†Ô∏è REMEMBER TO REPLACE:
- [YOUR_ADDRESS] with your wallet address
- [TOKENA_ADDRESS] with deployed TestTokenA address
- [TOKENB_ADDRESS] with deployed TestTokenB address
- [POOLMANAGER_ADDRESS] with deployed PoolManager address
- [POOL_ID] with calculated pool ID from assemblePoolID
- [LOWER_TOKEN_ADDRESS] with the smaller address value
- [HIGHER_TOKEN_ADDRESS] with the larger address value