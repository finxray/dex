{
	"id": "56244728b1343ce3dc5a66893ea2627c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MarketDataQuoter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.27;  \n\nimport {MarketData} from \"./structs/MarketData.sol\";\n\ncontract MarketDataQuoter { \n    function quoteMarket(uint256 id) public virtual returns (MarketData memory data) {\n        // once dummy is replaced with real code use `require` to check for valid id\n        // dummy data  \n        if (id == 0) {\n            data.spot = 42;\n            data.twa = 45;\n        } else if (id == 1) {\n            data.spot = 22; \n            data.twa = 23;\n        } else if (id == 2) {\n            data.spot = 456; \n            data.twa = 440;\n        } else {\n            revert(\"Invalid id\");\n        }\n    }\n}\n\n"
			},
			"contracts/structs/MarketData.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.27;\n\nstruct MarketData {\n    uint256 spot;\n    uint256 twa;\n} "
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MarketDataQuoter.sol": {
				"MarketDataQuoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "quoteMarket",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "spot",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "twa",
											"type": "uint256"
										}
									],
									"internalType": "struct MarketData",
									"name": "data",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MarketDataQuoter.sol\":113:658  contract MarketDataQuoter { ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MarketDataQuoter.sol\":113:658  contract MarketDataQuoter { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3dc355fe\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/MarketDataQuoter.sol\":146:656  function quoteMarket(uint256 id) public virtual returns (MarketData memory data) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/MarketDataQuoter.sol\":203:225  MarketData memory data */\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/MarketDataQuoter.sol\":356:357  0 */\n      0x00\n        /* \"contracts/MarketDataQuoter.sol\":350:352  id */\n      dup3\n        /* \"contracts/MarketDataQuoter.sol\":350:357  id == 0 */\n      sub\n        /* \"contracts/MarketDataQuoter.sol\":346:650  if (id == 0) {... */\n      tag_13\n      jumpi\n        /* \"contracts/MarketDataQuoter.sol\":385:387  42 */\n      0x2a\n        /* \"contracts/MarketDataQuoter.sol\":373:377  data */\n      dup2\n        /* \"contracts/MarketDataQuoter.sol\":373:382  data.spot */\n      0x00\n      add\n        /* \"contracts/MarketDataQuoter.sol\":373:387  data.spot = 42 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MarketDataQuoter.sol\":412:414  45 */\n      0x2d\n        /* \"contracts/MarketDataQuoter.sol\":401:405  data */\n      dup2\n        /* \"contracts/MarketDataQuoter.sol\":401:409  data.twa */\n      0x20\n      add\n        /* \"contracts/MarketDataQuoter.sol\":401:414  data.twa = 45 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MarketDataQuoter.sol\":346:650  if (id == 0) {... */\n      jump(tag_14)\n    tag_13:\n        /* \"contracts/MarketDataQuoter.sol\":441:442  1 */\n      0x01\n        /* \"contracts/MarketDataQuoter.sol\":435:437  id */\n      dup3\n        /* \"contracts/MarketDataQuoter.sol\":435:442  id == 1 */\n      sub\n        /* \"contracts/MarketDataQuoter.sol\":431:650  if (id == 1) {... */\n      tag_15\n      jumpi\n        /* \"contracts/MarketDataQuoter.sol\":470:472  22 */\n      0x16\n        /* \"contracts/MarketDataQuoter.sol\":458:462  data */\n      dup2\n        /* \"contracts/MarketDataQuoter.sol\":458:467  data.spot */\n      0x00\n      add\n        /* \"contracts/MarketDataQuoter.sol\":458:472  data.spot = 22 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MarketDataQuoter.sol\":498:500  23 */\n      0x17\n        /* \"contracts/MarketDataQuoter.sol\":487:491  data */\n      dup2\n        /* \"contracts/MarketDataQuoter.sol\":487:495  data.twa */\n      0x20\n      add\n        /* \"contracts/MarketDataQuoter.sol\":487:500  data.twa = 23 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MarketDataQuoter.sol\":431:650  if (id == 1) {... */\n      jump(tag_16)\n    tag_15:\n        /* \"contracts/MarketDataQuoter.sol\":527:528  2 */\n      0x02\n        /* \"contracts/MarketDataQuoter.sol\":521:523  id */\n      dup3\n        /* \"contracts/MarketDataQuoter.sol\":521:528  id == 2 */\n      sub\n        /* \"contracts/MarketDataQuoter.sol\":517:650  if (id == 2) {... */\n      tag_17\n      jumpi\n        /* \"contracts/MarketDataQuoter.sol\":556:559  456 */\n      0x01c8\n        /* \"contracts/MarketDataQuoter.sol\":544:548  data */\n      dup2\n        /* \"contracts/MarketDataQuoter.sol\":544:553  data.spot */\n      0x00\n      add\n        /* \"contracts/MarketDataQuoter.sol\":544:559  data.spot = 456 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MarketDataQuoter.sol\":585:588  440 */\n      0x01b8\n        /* \"contracts/MarketDataQuoter.sol\":574:578  data */\n      dup2\n        /* \"contracts/MarketDataQuoter.sol\":574:582  data.twa */\n      0x20\n      add\n        /* \"contracts/MarketDataQuoter.sol\":574:588  data.twa = 440 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/MarketDataQuoter.sol\":517:650  if (id == 2) {... */\n      jump(tag_18)\n    tag_17:\n        /* \"contracts/MarketDataQuoter.sol\":619:639  revert(\"Invalid id\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MarketDataQuoter.sol\":517:650  if (id == 2) {... */\n    tag_18:\n        /* \"contracts/MarketDataQuoter.sol\":431:650  if (id == 1) {... */\n    tag_16:\n        /* \"contracts/MarketDataQuoter.sol\":346:650  if (id == 0) {... */\n    tag_14:\n        /* \"contracts/MarketDataQuoter.sol\":146:656  function quoteMarket(uint256 id) public virtual returns (MarketData memory data) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_11:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_24:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_25:\n        /* \"#utility.yul\":490:514   */\n      tag_38\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_39:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_26:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_41\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_25\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_6:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_44\n      tag_22\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":766:885   */\n    tag_43:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_45\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_26\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1133   */\n    tag_27:\n        /* \"#utility.yul\":1102:1126   */\n      tag_47\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1102:1126   */\n      tag_24\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1097:1100   */\n      dup3\n        /* \"#utility.yul\":1090:1127   */\n      mstore\n        /* \"#utility.yul\":1025:1133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1185:1693   */\n    tag_28:\n        /* \"#utility.yul\":1334:1338   */\n      0x40\n        /* \"#utility.yul\":1329:1332   */\n      dup3\n        /* \"#utility.yul\":1325:1339   */\n      add\n        /* \"#utility.yul\":1421:1425   */\n      0x00\n        /* \"#utility.yul\":1414:1419   */\n      dup3\n        /* \"#utility.yul\":1410:1426   */\n      add\n        /* \"#utility.yul\":1404:1427   */\n      mload\n        /* \"#utility.yul\":1440:1503   */\n      tag_49\n        /* \"#utility.yul\":1497:1501   */\n      0x00\n        /* \"#utility.yul\":1492:1495   */\n      dup6\n        /* \"#utility.yul\":1488:1502   */\n      add\n        /* \"#utility.yul\":1474:1486   */\n      dup3\n        /* \"#utility.yul\":1440:1503   */\n      tag_27\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1349:1513   */\n      pop\n        /* \"#utility.yul\":1594:1598   */\n      0x20\n        /* \"#utility.yul\":1587:1592   */\n      dup3\n        /* \"#utility.yul\":1583:1599   */\n      add\n        /* \"#utility.yul\":1577:1600   */\n      mload\n        /* \"#utility.yul\":1613:1676   */\n      tag_50\n        /* \"#utility.yul\":1670:1674   */\n      0x20\n        /* \"#utility.yul\":1665:1668   */\n      dup6\n        /* \"#utility.yul\":1661:1675   */\n      add\n        /* \"#utility.yul\":1647:1659   */\n      dup3\n        /* \"#utility.yul\":1613:1676   */\n      tag_27\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1523:1686   */\n      pop\n        /* \"#utility.yul\":1303:1693   */\n      pop\n        /* \"#utility.yul\":1185:1693   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:2025   */\n    tag_9:\n        /* \"#utility.yul\":1844:1848   */\n      0x00\n        /* \"#utility.yul\":1882:1884   */\n      0x40\n        /* \"#utility.yul\":1871:1880   */\n      dup3\n        /* \"#utility.yul\":1867:1885   */\n      add\n        /* \"#utility.yul\":1859:1885   */\n      swap1\n      pop\n        /* \"#utility.yul\":1895:2018   */\n      tag_52\n        /* \"#utility.yul\":2015:2016   */\n      0x00\n        /* \"#utility.yul\":2004:2013   */\n      dup4\n        /* \"#utility.yul\":2000:2017   */\n      add\n        /* \"#utility.yul\":1991:1997   */\n      dup5\n        /* \"#utility.yul\":1895:2018   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1699:2025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2031:2200   */\n    tag_29:\n        /* \"#utility.yul\":2115:2126   */\n      0x00\n        /* \"#utility.yul\":2149:2155   */\n      dup3\n        /* \"#utility.yul\":2144:2147   */\n      dup3\n        /* \"#utility.yul\":2137:2156   */\n      mstore\n        /* \"#utility.yul\":2189:2193   */\n      0x20\n        /* \"#utility.yul\":2184:2187   */\n      dup3\n        /* \"#utility.yul\":2180:2194   */\n      add\n        /* \"#utility.yul\":2165:2194   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2366   */\n    tag_30:\n        /* \"#utility.yul\":2346:2358   */\n      0x496e76616c696420696400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2342:2343   */\n      0x00\n        /* \"#utility.yul\":2334:2340   */\n      dup3\n        /* \"#utility.yul\":2330:2344   */\n      add\n        /* \"#utility.yul\":2323:2359   */\n      mstore\n        /* \"#utility.yul\":2206:2366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2372:2738   */\n    tag_31:\n        /* \"#utility.yul\":2514:2517   */\n      0x00\n        /* \"#utility.yul\":2535:2602   */\n      tag_56\n        /* \"#utility.yul\":2599:2601   */\n      0x0a\n        /* \"#utility.yul\":2594:2597   */\n      dup4\n        /* \"#utility.yul\":2535:2602   */\n      tag_29\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2528:2602   */\n      swap2\n      pop\n        /* \"#utility.yul\":2611:2704   */\n      tag_57\n        /* \"#utility.yul\":2700:2703   */\n      dup3\n        /* \"#utility.yul\":2611:2704   */\n      tag_30\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2729:2731   */\n      0x20\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2720:2732   */\n      add\n        /* \"#utility.yul\":2713:2732   */\n      swap1\n      pop\n        /* \"#utility.yul\":2372:2738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2744:3163   */\n    tag_20:\n        /* \"#utility.yul\":2910:2914   */\n      0x00\n        /* \"#utility.yul\":2948:2950   */\n      0x20\n        /* \"#utility.yul\":2937:2946   */\n      dup3\n        /* \"#utility.yul\":2933:2951   */\n      add\n        /* \"#utility.yul\":2925:2951   */\n      swap1\n      pop\n        /* \"#utility.yul\":2997:3006   */\n      dup2\n        /* \"#utility.yul\":2991:2995   */\n      dup2\n        /* \"#utility.yul\":2987:3007   */\n      sub\n        /* \"#utility.yul\":2983:2984   */\n      0x00\n        /* \"#utility.yul\":2972:2981   */\n      dup4\n        /* \"#utility.yul\":2968:2985   */\n      add\n        /* \"#utility.yul\":2961:3008   */\n      mstore\n        /* \"#utility.yul\":3025:3156   */\n      tag_59\n        /* \"#utility.yul\":3151:3155   */\n      dup2\n        /* \"#utility.yul\":3025:3156   */\n      tag_31\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":3017:3156   */\n      swap1\n      pop\n        /* \"#utility.yul\":2744:3163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201e443168524e3104c3788cb7a3b285fd0aa4f3ed49c10b3224e16654eb9b531064736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061028b8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80633dc355fe1461002d575b5f5ffd5b6100476004803603810190610042919061015d565b61005d565b60405161005491906101c4565b60405180910390f35b61006561010e565b5f820361008657602a815f018181525050602d816020018181525050610109565b600182036100a8576016815f0181815250506017816020018181525050610108565b600282036100cc576101c8815f0181815250506101b8816020018181525050610107565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe90610237565b60405180910390fd5b5b5b919050565b60405180604001604052805f81526020015f81525090565b5f5ffd5b5f819050919050565b61013c8161012a565b8114610146575f5ffd5b50565b5f8135905061015781610133565b92915050565b5f6020828403121561017257610171610126565b5b5f61017f84828501610149565b91505092915050565b6101918161012a565b82525050565b604082015f8201516101ab5f850182610188565b5060208201516101be6020850182610188565b50505050565b5f6040820190506101d75f830184610197565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206964000000000000000000000000000000000000000000005f82015250565b5f610221600a836101dd565b915061022c826101ed565b602082019050919050565b5f6020820190508181035f83015261024e81610215565b905091905056fea26469706673582212201e443168524e3104c3788cb7a3b285fd0aa4f3ed49c10b3224e16654eb9b531064736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC355FE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x15D JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65 PUSH2 0x10E JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0x86 JUMPI PUSH1 0x2A DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x2D DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0xA8 JUMPI PUSH1 0x16 DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x17 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0xCC JUMPI PUSH2 0x1C8 DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1B8 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x12A JUMP JUMPDEST DUP2 EQ PUSH2 0x146 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157 DUP2 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0x126 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F DUP5 DUP3 DUP6 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x191 DUP2 PUSH2 0x12A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1AB PUSH0 DUP6 ADD DUP3 PUSH2 0x188 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696400000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x221 PUSH1 0xA DUP4 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP PUSH2 0x22C DUP3 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E DUP2 PUSH2 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PREVRANDAO BALANCE PUSH9 0x524E3104C3788CB7A3 0xB2 DUP6 REVERT EXP LOG4 RETURN 0xED BLOBHASH 0xC1 SIGNEXTEND ORIGIN 0x24 0xE1 PUSH7 0x54EB9B53106473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "113:545:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@quoteMarket_68": {
									"entryPoint": 93,
									"id": 68,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_MarketData_$76_memory_ptr_to_t_struct$_MarketData_$76_memory_ptr_fromStack": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MarketData_$76_memory_ptr__to_t_struct$_MarketData_$76_memory_ptr__fromStack_reversed": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3166:2",
										"nodeType": "YulBlock",
										"src": "0:3166:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:32:2",
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nativeSrc": "389:16:2",
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:2",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nativeSrc": "460:79:2",
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:2",
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:2",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:2",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nativeSrc": "519:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nativeSrc": "519:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nativeSrc": "490:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nativeSrc": "480:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nativeSrc": "473:43:2",
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nativeSrc": "470:63:2",
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:2",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nativeSrc": "597:87:2",
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nativeSrc": "607:29:2",
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nativeSrc": "616:20:2",
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nativeSrc": "645:33:2",
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nativeSrc": "645:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:2",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:2",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:2",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nativeSrc": "756:263:2",
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:2",
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nativeSrc": "804:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nativeSrc": "804:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nativeSrc": "773:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:2",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nativeSrc": "769:32:2",
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nativeSrc": "766:119:2",
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nativeSrc": "895:117:2",
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nativeSrc": "910:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:2",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:2",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:2",
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nativeSrc": "970:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nativeSrc": "949:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:2",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:2",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:2",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nativeSrc": "1080:53:2",
													"nodeType": "YulBlock",
													"src": "1080:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1097:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1097:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1120:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1120:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1102:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1102:17:2"
																		},
																		"nativeSrc": "1102:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1102:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1090:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:2"
																},
																"nativeSrc": "1090:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1090:37:2"
															},
															"nativeSrc": "1090:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1090:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1025:108:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1068:5:2",
														"nodeType": "YulTypedName",
														"src": "1068:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1075:3:2",
														"nodeType": "YulTypedName",
														"src": "1075:3:2",
														"type": ""
													}
												],
												"src": "1025:108:2"
											},
											{
												"body": {
													"nativeSrc": "1303:390:2",
													"nodeType": "YulBlock",
													"src": "1303:390:2",
													"statements": [
														{
															"nativeSrc": "1313:26:2",
															"nodeType": "YulVariableDeclaration",
															"src": "1313:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1329:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1329:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1334:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1334:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1325:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1325:3:2"
																},
																"nativeSrc": "1325:14:2",
																"nodeType": "YulFunctionCall",
																"src": "1325:14:2"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1317:4:2",
																	"nodeType": "YulTypedName",
																	"src": "1317:4:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1349:164:2",
															"nodeType": "YulBlock",
															"src": "1349:164:2",
															"statements": [
																{
																	"nativeSrc": "1384:43:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1384:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1414:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1414:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1421:4:2",
																						"nodeType": "YulLiteral",
																						"src": "1421:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1410:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1410:3:2"
																				},
																				"nativeSrc": "1410:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1410:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1404:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "1404:5:2"
																		},
																		"nativeSrc": "1404:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1404:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1388:12:2",
																			"nodeType": "YulTypedName",
																			"src": "1388:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1474:12:2",
																				"nodeType": "YulIdentifier",
																				"src": "1474:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1492:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "1492:3:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1497:4:2",
																						"nodeType": "YulLiteral",
																						"src": "1497:4:2",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1488:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1488:3:2"
																				},
																				"nativeSrc": "1488:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1488:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "1440:33:2",
																			"nodeType": "YulIdentifier",
																			"src": "1440:33:2"
																		},
																		"nativeSrc": "1440:63:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1440:63:2"
																	},
																	"nativeSrc": "1440:63:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "1440:63:2"
																}
															]
														},
														{
															"nativeSrc": "1523:163:2",
															"nodeType": "YulBlock",
															"src": "1523:163:2",
															"statements": [
																{
																	"nativeSrc": "1557:43:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1557:43:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1587:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1587:5:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1594:4:2",
																						"nodeType": "YulLiteral",
																						"src": "1594:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1583:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1583:3:2"
																				},
																				"nativeSrc": "1583:16:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1583:16:2"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1577:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "1577:5:2"
																		},
																		"nativeSrc": "1577:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:23:2"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1561:12:2",
																			"nodeType": "YulTypedName",
																			"src": "1561:12:2",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "1647:12:2",
																				"nodeType": "YulIdentifier",
																				"src": "1647:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1665:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "1665:3:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1670:4:2",
																						"nodeType": "YulLiteral",
																						"src": "1670:4:2",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1661:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1661:3:2"
																				},
																				"nativeSrc": "1661:14:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1661:14:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "1613:33:2",
																			"nodeType": "YulIdentifier",
																			"src": "1613:33:2"
																		},
																		"nativeSrc": "1613:63:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1613:63:2"
																	},
																	"nativeSrc": "1613:63:2",
																	"nodeType": "YulExpressionStatement",
																	"src": "1613:63:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_MarketData_$76_memory_ptr_to_t_struct$_MarketData_$76_memory_ptr_fromStack",
												"nativeSrc": "1185:508:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1290:5:2",
														"nodeType": "YulTypedName",
														"src": "1290:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1297:3:2",
														"nodeType": "YulTypedName",
														"src": "1297:3:2",
														"type": ""
													}
												],
												"src": "1185:508:2"
											},
											{
												"body": {
													"nativeSrc": "1849:176:2",
													"nodeType": "YulBlock",
													"src": "1849:176:2",
													"statements": [
														{
															"nativeSrc": "1859:26:2",
															"nodeType": "YulAssignment",
															"src": "1859:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1871:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1871:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1882:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1882:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1867:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:2"
																},
																"nativeSrc": "1867:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1867:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1859:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1859:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1991:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1991:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2004:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2004:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2015:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2015:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2000:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:2"
																		},
																		"nativeSrc": "2000:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2000:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_MarketData_$76_memory_ptr_to_t_struct$_MarketData_$76_memory_ptr_fromStack",
																	"nativeSrc": "1895:95:2",
																	"nodeType": "YulIdentifier",
																	"src": "1895:95:2"
																},
																"nativeSrc": "1895:123:2",
																"nodeType": "YulFunctionCall",
																"src": "1895:123:2"
															},
															"nativeSrc": "1895:123:2",
															"nodeType": "YulExpressionStatement",
															"src": "1895:123:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MarketData_$76_memory_ptr__to_t_struct$_MarketData_$76_memory_ptr__fromStack_reversed",
												"nativeSrc": "1699:326:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1821:9:2",
														"nodeType": "YulTypedName",
														"src": "1821:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1833:6:2",
														"nodeType": "YulTypedName",
														"src": "1833:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1844:4:2",
														"nodeType": "YulTypedName",
														"src": "1844:4:2",
														"type": ""
													}
												],
												"src": "1699:326:2"
											},
											{
												"body": {
													"nativeSrc": "2127:73:2",
													"nodeType": "YulBlock",
													"src": "2127:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2144:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2144:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2149:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2149:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2137:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:2"
																},
																"nativeSrc": "2137:19:2",
																"nodeType": "YulFunctionCall",
																"src": "2137:19:2"
															},
															"nativeSrc": "2137:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "2137:19:2"
														},
														{
															"nativeSrc": "2165:29:2",
															"nodeType": "YulAssignment",
															"src": "2165:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2184:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2184:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2189:4:2",
																		"nodeType": "YulLiteral",
																		"src": "2189:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2180:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2180:3:2"
																},
																"nativeSrc": "2180:14:2",
																"nodeType": "YulFunctionCall",
																"src": "2180:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2165:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "2165:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2031:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2099:3:2",
														"nodeType": "YulTypedName",
														"src": "2099:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2104:6:2",
														"nodeType": "YulTypedName",
														"src": "2104:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2115:11:2",
														"nodeType": "YulTypedName",
														"src": "2115:11:2",
														"type": ""
													}
												],
												"src": "2031:169:2"
											},
											{
												"body": {
													"nativeSrc": "2312:54:2",
													"nodeType": "YulBlock",
													"src": "2312:54:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2334:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2334:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2342:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2342:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2330:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:2"
																		},
																		"nativeSrc": "2330:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2330:14:2"
																	},
																	{
																		"hexValue": "496e76616c6964206964",
																		"kind": "string",
																		"nativeSrc": "2346:12:2",
																		"nodeType": "YulLiteral",
																		"src": "2346:12:2",
																		"type": "",
																		"value": "Invalid id"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2323:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:2"
																},
																"nativeSrc": "2323:36:2",
																"nodeType": "YulFunctionCall",
																"src": "2323:36:2"
															},
															"nativeSrc": "2323:36:2",
															"nodeType": "YulExpressionStatement",
															"src": "2323:36:2"
														}
													]
												},
												"name": "store_literal_in_memory_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab",
												"nativeSrc": "2206:160:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2304:6:2",
														"nodeType": "YulTypedName",
														"src": "2304:6:2",
														"type": ""
													}
												],
												"src": "2206:160:2"
											},
											{
												"body": {
													"nativeSrc": "2518:220:2",
													"nodeType": "YulBlock",
													"src": "2518:220:2",
													"statements": [
														{
															"nativeSrc": "2528:74:2",
															"nodeType": "YulAssignment",
															"src": "2528:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2594:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2594:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2599:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2599:2:2",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2535:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "2535:58:2"
																},
																"nativeSrc": "2535:67:2",
																"nodeType": "YulFunctionCall",
																"src": "2535:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2528:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2700:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2700:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab",
																	"nativeSrc": "2611:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "2611:88:2"
																},
																"nativeSrc": "2611:93:2",
																"nodeType": "YulFunctionCall",
																"src": "2611:93:2"
															},
															"nativeSrc": "2611:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "2611:93:2"
														},
														{
															"nativeSrc": "2713:19:2",
															"nodeType": "YulAssignment",
															"src": "2713:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2724:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2729:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2720:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:2"
																},
																"nativeSrc": "2720:12:2",
																"nodeType": "YulFunctionCall",
																"src": "2720:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2713:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2372:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2506:3:2",
														"nodeType": "YulTypedName",
														"src": "2506:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2514:3:2",
														"nodeType": "YulTypedName",
														"src": "2514:3:2",
														"type": ""
													}
												],
												"src": "2372:366:2"
											},
											{
												"body": {
													"nativeSrc": "2915:248:2",
													"nodeType": "YulBlock",
													"src": "2915:248:2",
													"statements": [
														{
															"nativeSrc": "2925:26:2",
															"nodeType": "YulAssignment",
															"src": "2925:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2937:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2937:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2948:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2948:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2933:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2933:3:2"
																},
																"nativeSrc": "2933:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2933:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2925:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2925:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2972:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2983:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2983:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2968:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:2"
																		},
																		"nativeSrc": "2968:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2968:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2991:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "2991:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2997:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2997:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2987:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:2"
																		},
																		"nativeSrc": "2987:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2961:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:2"
																},
																"nativeSrc": "2961:47:2",
																"nodeType": "YulFunctionCall",
																"src": "2961:47:2"
															},
															"nativeSrc": "2961:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "2961:47:2"
														},
														{
															"nativeSrc": "3017:139:2",
															"nodeType": "YulAssignment",
															"src": "3017:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3151:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "3151:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3025:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "3025:124:2"
																},
																"nativeSrc": "3025:131:2",
																"nodeType": "YulFunctionCall",
																"src": "3025:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3017:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3017:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2744:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2895:9:2",
														"nodeType": "YulTypedName",
														"src": "2895:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2910:4:2",
														"nodeType": "YulTypedName",
														"src": "2910:4:2",
														"type": ""
													}
												],
												"src": "2744:419:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct MarketData -> struct MarketData\n    function abi_encode_t_struct$_MarketData_$76_memory_ptr_to_t_struct$_MarketData_$76_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // spot\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // twa\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_MarketData_$76_memory_ptr__to_t_struct$_MarketData_$76_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_MarketData_$76_memory_ptr_to_t_struct$_MarketData_$76_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid id\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80633dc355fe1461002d575b5f5ffd5b6100476004803603810190610042919061015d565b61005d565b60405161005491906101c4565b60405180910390f35b61006561010e565b5f820361008657602a815f018181525050602d816020018181525050610109565b600182036100a8576016815f0181815250506017816020018181525050610108565b600282036100cc576101c8815f0181815250506101b8816020018181525050610107565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe90610237565b60405180910390fd5b5b5b919050565b60405180604001604052805f81526020015f81525090565b5f5ffd5b5f819050919050565b61013c8161012a565b8114610146575f5ffd5b50565b5f8135905061015781610133565b92915050565b5f6020828403121561017257610171610126565b5b5f61017f84828501610149565b91505092915050565b6101918161012a565b82525050565b604082015f8201516101ab5f850182610188565b5060208201516101be6020850182610188565b50505050565b5f6040820190506101d75f830184610197565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206964000000000000000000000000000000000000000000005f82015250565b5f610221600a836101dd565b915061022c826101ed565b602082019050919050565b5f6020820190508181035f83015261024e81610215565b905091905056fea26469706673582212201e443168524e3104c3788cb7a3b285fd0aa4f3ed49c10b3224e16654eb9b531064736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DC355FE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x15D JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65 PUSH2 0x10E JUMP JUMPDEST PUSH0 DUP3 SUB PUSH2 0x86 JUMPI PUSH1 0x2A DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x2D DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x109 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB PUSH2 0xA8 JUMPI PUSH1 0x16 DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x17 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0xCC JUMPI PUSH2 0x1C8 DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x1B8 DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x12A JUMP JUMPDEST DUP2 EQ PUSH2 0x146 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157 DUP2 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0x126 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17F DUP5 DUP3 DUP6 ADD PUSH2 0x149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x191 DUP2 PUSH2 0x12A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1AB PUSH0 DUP6 ADD DUP3 PUSH2 0x188 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1BE PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696400000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x221 PUSH1 0xA DUP4 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP PUSH2 0x22C DUP3 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24E DUP2 PUSH2 0x215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PREVRANDAO BALANCE PUSH9 0x524E3104C3788CB7A3 0xB2 DUP6 REVERT EXP LOG4 RETURN 0xED BLOBHASH 0xC1 SIGNEXTEND ORIGIN 0x24 0xE1 PUSH7 0x54EB9B53106473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "113:545:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:510;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;203:22;;:::i;:::-;356:1;350:2;:7;346:304;;385:2;373:4;:9;;:14;;;;;412:2;401:4;:8;;:13;;;;;346:304;;;441:1;435:2;:7;431:219;;470:2;458:4;:9;;:14;;;;;498:2;487:4;:8;;:13;;;;;431:219;;;527:1;521:2;:7;517:133;;556:3;544:4;:9;;:15;;;;;585:3;574:4;:8;;:14;;;;;517:133;;;619:20;;;;;;;;;;:::i;:::-;;;;;;;;517:133;431:219;346:304;146:510;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:108::-;1102:24;1120:5;1102:24;:::i;:::-;1097:3;1090:37;1025:108;;:::o;1185:508::-;1334:4;1329:3;1325:14;1421:4;1414:5;1410:16;1404:23;1440:63;1497:4;1492:3;1488:14;1474:12;1440:63;:::i;:::-;1349:164;1594:4;1587:5;1583:16;1577:23;1613:63;1670:4;1665:3;1661:14;1647:12;1613:63;:::i;:::-;1523:163;1303:390;1185:508;;:::o;1699:326::-;1844:4;1882:2;1871:9;1867:18;1859:26;;1895:123;2015:1;2004:9;2000:17;1991:6;1895:123;:::i;:::-;1699:326;;;;:::o;2031:169::-;2115:11;2149:6;2144:3;2137:19;2189:4;2184:3;2180:14;2165:29;;2031:169;;;;:::o;2206:160::-;2346:12;2342:1;2334:6;2330:14;2323:36;2206:160;:::o;2372:366::-;2514:3;2535:67;2599:2;2594:3;2535:67;:::i;:::-;2528:74;;2611:93;2700:3;2611:93;:::i;:::-;2729:2;2724:3;2720:12;2713:19;;2372:366;;;:::o;2744:419::-;2910:4;2948:2;2937:9;2933:18;2925:26;;2997:9;2991:4;2987:20;2983:1;2972:9;2968:17;2961:47;3025:131;3151:4;3025:131;:::i;:::-;3017:139;;2744:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "130200",
								"executionCost": "175",
								"totalCost": "130375"
							},
							"external": {
								"quoteMarket(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 113,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 658,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e443168524e3104c3788cb7a3b285fd0aa4f3ed49c10b3224e16654eb9b531064736f6c634300081b0033",
									".code": [
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "3DC355FE"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 203,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 203,
											"end": 225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 203,
											"end": 225,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 203,
											"end": 225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 356,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 350,
											"end": 357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 346,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 346,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 385,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 373,
											"end": 377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 0,
											"value": "2D"
										},
										{
											"begin": 401,
											"end": 405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 346,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 346,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 346,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 441,
											"end": 442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 435,
											"end": 442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 431,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 431,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 470,
											"end": 472,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 458,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 458,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 458,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 458,
											"end": 472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 500,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 487,
											"end": 491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 487,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 487,
											"end": 500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 487,
											"end": 500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 431,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 431,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 431,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 527,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 521,
											"end": 523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 521,
											"end": 528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 517,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 517,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 556,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "1C8"
										},
										{
											"begin": 544,
											"end": 548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 585,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "1B8"
										},
										{
											"begin": 574,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 574,
											"end": 582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 574,
											"end": 582,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 574,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 574,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 574,
											"end": 588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 574,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 574,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 517,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 517,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 517,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 517,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 431,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 431,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 346,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 146,
											"end": 656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1102,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1090,
											"end": 1127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1693,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1185,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 1332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1419,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1427,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1497,
											"end": 1501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1495,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1474,
											"end": 1486,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1440,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1440,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1594,
											"end": 1598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1600,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1670,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1668,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1613,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1613,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1185,
											"end": 1693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 2025,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1699,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1844,
											"end": 1848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1885,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1859,
											"end": 1885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1895,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2018,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1895,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 2025,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 2025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 2025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 2025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2200,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2031,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2115,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2193,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2180,
											"end": 2194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2200,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2200,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2366,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2206,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH",
											"source": 2,
											"value": "496E76616C696420696400000000000000000000000000000000000000000000"
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2330,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2738,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2372,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2599,
											"end": 2601,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 2594,
											"end": 2597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2535,
											"end": 2602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2602,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2535,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2611,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2704,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2611,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2732,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2738,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2738,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2925,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 2995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3007,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 2984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2968,
											"end": 2985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 3008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3025,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3156,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3025,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 3163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/MarketDataQuoter.sol",
								"contracts/structs/MarketData.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"quoteMarket(uint256)": "3dc355fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"quoteMarket\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"spot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twa\",\"type\":\"uint256\"}],\"internalType\":\"struct MarketData\",\"name\":\"data\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MarketDataQuoter.sol\":\"MarketDataQuoter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MarketDataQuoter.sol\":{\"keccak256\":\"0xcfd9f2b5bd607e24ed9186fe422f95d354915dab7371b4acf7559f3bfb64e63b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3246d4e2275362feb90cf6e71eb55724515b98d07731f0947221c6b206f4993a\",\"dweb:/ipfs/QmVyUXsapzomx8QJWpmcBWFc347sjzp8JC6TGP97huELGD\"]},\"contracts/structs/MarketData.sol\":{\"keccak256\":\"0x71f96387ceba111d15aaaf1b66986195c9a6a9ce750368bf28276e1f40900400\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7b8ae1985cf0849448030d01b9221b4df27434cf049b625bde627fc767029c2\",\"dweb:/ipfs/QmPTpLqBDsgeZ7fuC1db8u8bkUtvohaJ8YxinG9QnyXQdC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MarketDataQuoter.sol": {
				"ast": {
					"absolutePath": "contracts/MarketDataQuoter.sol",
					"exportedSymbols": {
						"MarketData": [
							76
						],
						"MarketDataQuoter": [
							69
						]
					},
					"id": 70,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "contracts/structs/MarketData.sol",
							"file": "./structs/MarketData.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 70,
							"sourceUnit": 77,
							"src": "59:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "MarketData",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 76,
										"src": "67:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MarketDataQuoter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "MarketDataQuoter",
							"nameLocation": "122:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "227:429:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 11,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "350:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "356:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 27,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "435:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "441:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "521:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "527:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 63,
															"nodeType": "Block",
															"src": "605:45:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "496e76616c6964206964",
																				"id": 60,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "626:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab",
																					"typeString": "literal_string \"Invalid id\""
																				},
																				"value": "Invalid id"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_4a8519413c0c890025c6fea29dcc43ab1eeb586c364fc1425cb613d7e7fa88ab",
																					"typeString": "literal_string \"Invalid id\""
																				}
																			],
																			"id": 59,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "619:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "619:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 62,
																	"nodeType": "ExpressionStatement",
																	"src": "619:20:0"
																}
															]
														},
														"id": 64,
														"nodeType": "IfStatement",
														"src": "517:133:0",
														"trueBody": {
															"id": 58,
															"nodeType": "Block",
															"src": "530:69:0",
															"statements": [
																{
																	"expression": {
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 46,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "544:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
																					"typeString": "struct MarketData memory"
																				}
																			},
																			"id": 48,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "549:4:0",
																			"memberName": "spot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 73,
																			"src": "544:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "343536",
																			"id": 49,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "556:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_456_by_1",
																				"typeString": "int_const 456"
																			},
																			"value": "456"
																		},
																		"src": "544:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 51,
																	"nodeType": "ExpressionStatement",
																	"src": "544:15:0"
																},
																{
																	"expression": {
																		"id": 56,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 52,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "574:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
																					"typeString": "struct MarketData memory"
																				}
																			},
																			"id": 54,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "579:3:0",
																			"memberName": "twa",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 75,
																			"src": "574:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "343430",
																			"id": 55,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "585:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_440_by_1",
																				"typeString": "int_const 440"
																			},
																			"value": "440"
																		},
																		"src": "574:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 57,
																	"nodeType": "ExpressionStatement",
																	"src": "574:14:0"
																}
															]
														}
													},
													"id": 65,
													"nodeType": "IfStatement",
													"src": "431:219:0",
													"trueBody": {
														"id": 42,
														"nodeType": "Block",
														"src": "444:67:0",
														"statements": [
															{
																"expression": {
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 30,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "458:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
																				"typeString": "struct MarketData memory"
																			}
																		},
																		"id": 32,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "463:4:0",
																		"memberName": "spot",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 73,
																		"src": "458:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "3232",
																		"id": 33,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "470:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_22_by_1",
																			"typeString": "int_const 22"
																		},
																		"value": "22"
																	},
																	"src": "458:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 35,
																"nodeType": "ExpressionStatement",
																"src": "458:14:0"
															},
															{
																"expression": {
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 36,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "487:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
																				"typeString": "struct MarketData memory"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "492:3:0",
																		"memberName": "twa",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 75,
																		"src": "487:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "3233",
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "498:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_23_by_1",
																			"typeString": "int_const 23"
																		},
																		"value": "23"
																	},
																	"src": "487:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 41,
																"nodeType": "ExpressionStatement",
																"src": "487:13:0"
															}
														]
													}
												},
												"id": 66,
												"nodeType": "IfStatement",
												"src": "346:304:0",
												"trueBody": {
													"id": 26,
													"nodeType": "Block",
													"src": "359:66:0",
													"statements": [
														{
															"expression": {
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 14,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "373:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
																			"typeString": "struct MarketData memory"
																		}
																	},
																	"id": 16,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "378:4:0",
																	"memberName": "spot",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 73,
																	"src": "373:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3432",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "385:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_42_by_1",
																		"typeString": "int_const 42"
																	},
																	"value": "42"
																},
																"src": "373:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 19,
															"nodeType": "ExpressionStatement",
															"src": "373:14:0"
														},
														{
															"expression": {
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 20,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "401:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
																			"typeString": "struct MarketData memory"
																		}
																	},
																	"id": 22,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "406:3:0",
																	"memberName": "twa",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 75,
																	"src": "401:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3435",
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "412:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_45_by_1",
																		"typeString": "int_const 45"
																	},
																	"value": "45"
																},
																"src": "401:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 25,
															"nodeType": "ExpressionStatement",
															"src": "401:13:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3dc355fe",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteMarket",
									"nameLocation": "155:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "175:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "167:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:12:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "221:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "203:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketData_$76_memory_ptr",
													"typeString": "struct MarketData"
												},
												"typeName": {
													"id": 8,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 7,
														"name": "MarketData",
														"nameLocations": [
															"203:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 76,
														"src": "203:10:0"
													},
													"referencedDeclaration": 76,
													"src": "203:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketData_$76_storage_ptr",
														"typeString": "struct MarketData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:24:0"
									},
									"scope": 69,
									"src": "146:510:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 70,
							"src": "113:545:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:628:0"
				},
				"id": 0
			},
			"contracts/structs/MarketData.sol": {
				"ast": {
					"absolutePath": "contracts/structs/MarketData.sol",
					"exportedSymbols": {
						"MarketData": [
							76
						]
					},
					"id": 77,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 71,
							"literals": [
								"solidity",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"canonicalName": "MarketData",
							"id": 76,
							"members": [
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "spot",
									"nameLocation": "89:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "81:12:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 72,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "81:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 75,
									"mutability": "mutable",
									"name": "twa",
									"nameLocation": "107:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "99:11:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 74,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "99:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MarketData",
							"nameLocation": "64:10:1",
							"nodeType": "StructDefinition",
							"scope": 77,
							"src": "57:56:1",
							"visibility": "public"
						}
					],
					"src": "32:82:1"
				},
				"id": 1
			}
		}
	}
}